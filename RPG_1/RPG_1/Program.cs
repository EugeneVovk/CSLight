using System;
/**
 * Игра-бродилка
 * В которой герой ходит, собирает сокровища (которые отображаются)
 * 1. Создание/отображение карты
 * 2. Координаты игрока
 */
namespace RPG_1
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // Изначально отключаем курсор, чтобы он не мигал
            Console.CursorVisible = false;

            // Создание карты, где '#' - стены, а 'x' - сокровища
            char[,] map =
            {
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#' },
                {'#','x','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#' },
                {'#',' ','#',' ','#',' ',' ','#','#',' ',' ',' ',' ',' ',' ',' ','x',' ',' ','#' },
                {'#',' ','#',' ','#',' ',' ','#','#',' ',' ',' ',' ',' ',' ','#','#','#','#','#' },
                {'#',' ',' ',' ','#',' ',' ','#','#',' ','#','#','#','#',' ',' ',' ','#','x','#' },
                {'#',' ','#',' ','#',' ',' ',' ',' ',' ','#','x',' ','#',' ',' ',' ',' ',' ','#' },
                {'#',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ',' ','#' },
                {'#',' ','#',' ','#',' ','#','#','#','#','#',' ',' ','#',' ','#','#','#',' ','#' },
                {'#',' ','#',' ','#',' ','#',' ',' ',' ','#',' ',' ','#',' ',' ',' ','#',' ','#' },
                {'#',' ','#',' ','#',' ',' ',' ',' ',' ','#',' ',' ','#',' ',' ','x','#',' ','#' },
                {'#',' ','#',' ',' ',' ',' ','#',' ',' ','#',' ',' ','#','#','#','#','#',' ','#' },
                {'#',' ','#','#','#','#',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ','#' },
                {'#',' ',' ',' ','x','#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ','#' },
                {'#',' ',' ',' ',' ',' ',' ',' ',' ','x','#',' ',' ',' ','#',' ',' ',' ',' ','#' },
                {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#' }
            };
            // Сумка для сокровищ
            char[] bag = new char[1];

            // Координаты игрока
            int userX = 6;
            int userY = 6;

            // Наша программа будет постоянно работать
            // Игрок будет постоянно нажимать какие-то клавиши для перемещения
            // Цикл должен постоянно обновляться => while(), пока программу не закроют
            // Отрисока карты после каждой манипуляции
            while (true)
            {
                // Отображение сумки
                Console.SetCursorPosition(0, 20);
                Console.Write("Сумка: ");
                for (int i = 0; i < bag.Length; i++)
                {
                    Console.Write(bag[i] + " ");
                }
                Console.WriteLine($"\nНайдено сокровищ: {bag.Length - 1}");

                // Отображение карты
                Console.SetCursorPosition(0, 0);
                for (int i = 0; i < map.GetLength(0); i++)
                {
                    for (int j = 0; j < map.GetLength(1); j++)
                    {
                        Console.Write(map[i, j]);
                    }
                    Console.WriteLine();
                }

                // Игрок
                Console.SetCursorPosition(userY, userX);
                Console.Write('@');

                // Движение игрока
                ConsoleKeyInfo charKey = Console.ReadKey();
                switch (charKey.Key)
                {
                    case ConsoleKey.UpArrow:
                        if (map[userX - 1, userY] != '#')
                        {
                            userX--;
                        }
                        break;
                    case ConsoleKey.DownArrow:
                        if (map[userX + 1, userY] != '#')
                        {
                            userX++;
                        }
                        break;
                    case ConsoleKey.LeftArrow:
                        if (map[userX, userY - 1] != '#')
                        {
                            userY--;
                        }
                        break;
                    case ConsoleKey.RightArrow:
                        if (map[userX, userY + 1] != '#')
                        {
                            userY++;
                        }
                        break;
                }

                // Логика для сборки сокровищ
                if (map[userX, userY] == 'x')
                {
                    // мы откопали сокровища, осталась ямка
                    map[userX, userY] = 'o';
                    // и положили сокровища в сумку (расширяем массив)
                    char[] tempBag = new char[bag.Length + 1];
                    for (int i = 0; i < bag.Length; i++)
                    {
                        tempBag[i] = bag[i];
                    }
                    tempBag[tempBag.Length - 1] = 'x';
                    bag = tempBag;
                }

                // Чтобы карта не зарисовывала персонажа/чтобы он не мерцал -
                Console.Clear();
            }
        }
    }
}
